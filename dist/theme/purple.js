(()=>{"use strict";const e={init:"theme:init",cleanup:"theme:cleanup",refresh:"theme:refresh"},n=class{#e(n){if(!Object.values(e).includes(n))throw new Error(`Invalid theme event: ${n}`)}dispatch(e,n=null){let t;this.#e(e),null!==n?(console.log("DISPATCH WITH DETAILS",e,{detail:n}),t=new CustomEvent(e,{detail:n})):(console.log("DISPATCH NO DETAILS",e),t=new CustomEvent(e)),document.dispatchEvent(t)}observe(e,n){this.#e(e),document.addEventListener(e,n)}unobserve(e,n){this.#e(e),document.removeEventListener(e,n)}},t=class{#n;#t;#s;#i;#l;#o;constructor(){this.#t=new n,this.#o={},this.#s=this.#r.bind(this),this.#i=this.#h.bind(this),this.#l=this.#a.bind(this),this.#d()}#d(){this.#t.observe(e.init,this.#s),this.#t.observe(e.cleanup,this.#i),this.#t.observe(e.refresh,this.#l)}#u(){this.#t.unobserve(e.init,this.#s),this.#t.unobserve(e.cleanup,this.#i),this.#t.unobserve(e.refresh,this.#l)}#r({detail:e}){e?.iconReplacer&&(this.#n=e.iconReplacer),this.onInit()}#h(){this.onCleanup(),this.#n=null,this.#u()}#a({detail:e}){e&&"object"==typeof e&&(this.#o={...this.#o,...e},this.onRefresh(this.#o))}get IconReplacer(){return this.#n}onInit(){console.debug("Theme initialized")}onCleanup(){console.debug("Theme cleaned up")}onRefresh(e){this.IconReplacer&&(this.IconReplacer.state=e)}};new class extends t{onInit(){console.log("PURPLE initialized")}onCleanup(){console.log("PURPLE cleaned up")}}})();